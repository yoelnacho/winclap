/* -----------------------------------------------
    Mixins
--------------------------------------------------

// var

-------------------------------------------------- */
// Truncate
@mixin truncate() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Small
@mixin small($size) {
    font-size: ($size - 2);
}

//Link colors
@mixin link($color, $hover, $underline: false) {
    color: $color;

    @if $underline {
        text-decoration: underline;
    } @else {
        text-decoration: none;
    }

    &:hover,
    &:focus,
    &:active:focus {
        color: $hover;
    }
}


// Truncate by lines
// How to use @include tuncate-line(2);
@mixin tuncate-line($value) {
    display: -webkit-box;
    -webkit-line-clamp: $value;
    -webkit-box-orient: vertical;
    white-space: normal;
}

// V-align
@mixin v-align(){
    display: table;
    width: 100%;

    @content;

    > * {
        display: table-cell;
        vertical-align: middle;
    }
}

@mixin vertical-align($position: absolute) {
    @include transform(translateY(-50%));
    @extend %ui-full-width;

    position: $position;
    top: 50%;
}

// Example @include calc(width, "100% - 60px")
// Example with vars: @include calc(width, "100% - " ($space-medium * 2));
@mixin calc($property, $expression) {
    #{$property}: -moz-calc(#{$expression});
    #{$property}: -webkit-calc(#{$expression});
    #{$property}: calc(#{$expression});
}

// mediaqueries
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);

        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

// Orientation
@mixin orientation($orientation: landscape) {
    @media (orientation: $orientation) {
        @content;
    }
}

// Aspect ratio
@mixin aspect-ratio($width, $height) {
    position: relative;

    &:before {
        content: "";
        display: block;
        padding-top: ($height / $width) * 100%;
        width: 100%;
    }

    > img {
        left: 0;
        position: absolute;
        top: 0;
        width: 100%;
    }
}

// Fonts
// @include font-source(16px, 500, 1);
@mixin font-source($size: false, $weight: false,  $lh: false, $colour: false) {
    font-family: $font-primary;
    @if $size { font-size: $size; }
    @if $weight { font-weight: $weight; }
    @if $lh { line-height: $lh; }
    @if $colour { color: $colour; }
}

// Placeholder
@mixin placeholder($size) {
    &:-moz-placeholder {
        font-size: $size;
    }
    &:-ms-input-placeholder {
        font-size: $size;
    }
    &::-webkit-input-placeholder {
        font-size: $size;
    }
    &::-moz-placeholder {
        font-size: $size;
    }
}
